apiVersion: apps/v1
kind: Deployment
metadata:
  name: gridcapa-postgresql
  labels:
    app: gridcapa
    component: postgresql
    app.kubernetes.io/component: postgresql
spec:
  selector:
    matchLabels:
      app: gridcapa
      component: postgresql
  template:
    metadata:
      labels:
        app: gridcapa
        component: postgresql
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
    spec:
      containers:
      - name: main
        image: docker.io/bitnami/postgresql:14.6.0
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5432
        env:
          - name: PGPASSWORD
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 25
          periodSeconds: 15
          timeoutSeconds: 2
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 35
          timeoutSeconds: 2
          periodSeconds: 15
          failureThreshold: 3
          successThreshold: 1
        resources:
          limits:
            cpu: "500m"
            memory: 10Gi
          requests:
            cpu: "500m"
            memory: 5Gi
        volumeMounts:
          - name: postgres-data
            mountPath: /bitnami/postgres # important to let postgres and not postgresql otherwise rights issues
          - name: postgres-init
            subPath: init.sh
            mountPath: /docker-entrypoint-initdb.d/init.sh
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: gridsuite-postgresql-storage
        - name: postgres-init
          configMap:
            name: gridcapa-postgresql-configmap